
private global begin_timestamp = 0

probe begin { begin_timestamp = gettimeofday_us () }

private global rss_max = 0
private global utime = 0
private global stime = 0
private global ncollections = 0
private global traced_time = 0

probe process.function("Fkill_emacs@emacs.c")
{
  task = task_current();
  rss_max = task->mm->hiwater_rss
  utime = task->utime
  stime = task->stime
  arena = @var("global_igc@igc.c")->arena
  ncollections = arena->historyStruct->epoch
  traced_time = arena->tracedTime
}

function us_to_string(d:long)
{
  return sprintf ("%u.%06u", d / 1000000, d % 1000000)
}

function ns_to_string(d:long)
{
  return sprintf ("%u.%09u", d / 1000000000, d % 1000000000)
}

probe end
{
  elapsed = gettimeofday_us () - begin_timestamp;
  emacs = @1
  benchmark = @2

  printf ("%s,%s,%s,%s,%s,%u,%s,%u\n",
	  emacs, benchmark,
	  us_to_string (elapsed),
	  ns_to_string (utime),
	  ns_to_string (stime),
	  rss_max * mem_page_size() / 1024,
	  fp_to_string (traced_time, 3),
	  ncollections);
}
